#!/bin/bash
# All-in-one setup for Ubuntu/Lubuntu 24.04 (AUTO-RUN)
# Source features merged and adapted from: ChromeOld.sh, fix_password_issues.sh, SetupVm.bash
# Behavior per user request:
#  - Auto run all steps sequentially without a menu.
#  - Only prompt ONCE: to choose which Chrome .deb file to install from the downloaded Google Drive folder.
#  - Remove Firefox install/uninstall features. (No Firefox modifications are performed.)

set -euo pipefail

# ====== Helpers ======
log()   { echo -e "$1"; }
need_sudo() { if ! sudo -v; then echo "C·∫ßn quy·ªÅn sudo ƒë·ªÉ ti·∫øp t·ª•c."; exit 1; fi }
is_cmd() { command -v "$1" &>/dev/null; }

# ====== Global venv for gdown (reuse across steps) ======
ensure_gdown() {
  if [[ ! -d "$HOME/gdown-venv" ]]; then
    log "üì¶ T·∫°o venv Python cho gdown..."
    python3 -m venv "$HOME/gdown-venv"
  fi
  # shellcheck disable=SC1091
  source "$HOME/gdown-venv/bin/activate"
  pip install --no-cache-dir --upgrade pip gdown
}

# ====== 1) C·∫≠p nh·∫≠t & g√≥i n·ªÅn (t·ª´ SetupVm.bash) ======
base_setup() {
  need_sudo
  log "üîÑ ƒêang c·∫≠p nh·∫≠t h·ªá th·ªëng & th√™m universe..."
  sudo add-apt-repository universe -y || true
  sudo apt update && sudo apt upgrade -y

  log "üì¶ C√†i Open VM Tools..."
  sudo apt install -y open-vm-tools open-vm-tools-desktop || echo "‚ö†Ô∏è Kh√¥ng c√≥ g√≥i Open VM Tools ph√π h·ª£p."

  log "üì¶ C√†i python3-pip, unzip, venv..."
  sudo apt install -y python3-pip unzip python3-venv

  log "üì¶ C√†i build-essential & Qt5 libs (cho Nekobox)..."
  sudo apt install -y build-essential \
    libqt5network5 libqt5core5a libqt5gui5 libqt5widgets5 \
    qtbase5-dev libqt5x11extras5 libqt5quick5 libqt5quickwidgets5 libqt5quickparticles5

  log "‚úÖ Ho√†n t·∫•t b∆∞·ªõc n·ªÅn."
}

# ====== 2) C√†i Chrome t·ª´ Google Drive & t·∫Øt update ======
install_chrome_from_drive() {
  need_sudo
  ensure_gdown

  # üëâ Thay ID n√†y n·∫øu c·∫ßn. C√≥ th·ªÉ override b·∫±ng bi·∫øn m√¥i tr∆∞·ªùng tr∆∞·ªõc khi ch·∫°y: CHROME_DRIVE_ID=... ./script.sh
  local CHROME_DRIVE_ID="${CHROME_DRIVE_ID:-1tD0XPj-t5C7p9ByV3RLg-qcHaYYSXAj1}"
  local DOWNLOAD_DIR="$HOME/browser_temp"
  mkdir -p "$DOWNLOAD_DIR" && cd "$DOWNLOAD_DIR"

  log "üì• T·∫£i th∆∞ m·ª•c Chrome t·ª´ Google Drive..."
  gdown --folder "https://drive.google.com/drive/folders/$CHROME_DRIVE_ID" --no-cookies

  # Ch·ªâ h·ªèi ng∆∞·ªùi d√πng M·ªòT L·∫¶N ƒë·ªÉ ch·ªçn file .deb
  log "üîç Li·ªát k√™ c√°c g√≥i Chrome (.deb) ƒë√£ t·∫£i:"
  mapfile -t FILES < <(find "$DOWNLOAD_DIR" -type f -name "*.deb" | sort)
  if (( ${#FILES[@]} == 0 )); then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y file .deb n√†o trong th∆∞ m·ª•c t·∫£i v·ªÅ!"; exit 1
  fi
  nl -w2 -s". " <(printf "%s\n" "${FILES[@]}")
  read -rp "üëâ Nh·∫≠p s·ªë th·ª© t·ª± file Chrome mu·ªën c√†i: " choice
  if ! [[ "$choice" =~ ^[0-9]+$ ]] || (( choice < 1 || choice > ${#FILES[@]} )); then
    echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!"; exit 1
  fi
  local FILE_SELECT="${FILES[$((choice-1))]}"
  echo "‚úÖ Ch·ªçn file: $FILE_SELECT"

  log "üßπ D·ªçn d·∫πp file kh√¥ng d√πng..."
  find "$DOWNLOAD_DIR" -type f ! -name "$(basename "$FILE_SELECT")" -delete || true

  log "üóëÔ∏è G·ª° Chrome b·∫£n ƒëang c√≥ (n·∫øu c√≥)..."
  sudo apt remove -y google-chrome-stable || true

  log "üöÄ C√†i Chrome t·ª´ g√≥i ƒë√£ ch·ªçn..."
  sudo dpkg -i "$FILE_SELECT" || sudo apt -f install -y
  sudo apt-mark hold google-chrome-stable || true
  sudo sed -i 's/^deb/# deb/' /etc/apt/sources.list.d/google-chrome.list 2>/dev/null || true

  # T·∫Øt update n·ªôi b·ªô Chrome
  log "üö´ T·∫Øt update n·ªôi b·ªô Chrome..."
  sudo rm -rf /opt/google/chrome/cron/ || true
  sudo mkdir -p /etc/opt/chrome/policies/managed
  cat <<'JSON' >/tmp/disable_update.json
{
  "AutoUpdateCheckPeriodMinutes": 0,
  "DisableAutoUpdateChecksCheckbox": true,
  "MetricsReportingEnabled": false
}
JSON
  sudo mv /tmp/disable_update.json /etc/opt/chrome/policies/managed/disable_update.json
  sudo chmod -R 000 /opt/google/chrome/cron || true

  # T·∫°o shortcut ri√™ng v√† pin
  log "üé® T·∫°o shortcut Chrome (Custom)..."
  cat <<'EOF' > ~/.local/share/applications/browser_custom.desktop
[Desktop Entry]
Name=Google Chrome (Custom)
Exec=/usr/bin/google-chrome-stable %U
Icon=google-chrome
Type=Application
Categories=Network;WebBrowser;
StartupNotify=true
EOF

  if is_cmd gsettings; then
    gio set ~/.local/share/applications/browser_custom.desktop metadata::trusted true 2>/dev/null || true
    gsettings set org.gnome.shell favorite-apps "$(gsettings get org.gnome.shell favorite-apps | sed "s/]$/, 'browser_custom.desktop']/")"
  else
    echo "‚ÑπÔ∏è Lubuntu (LXQt): h√£y nh·∫•p ph·∫£i bi·ªÉu t∆∞·ª£ng trong menu -> 'Pin to Panel'."
  fi

  log "‚úÖ Ho√†n t·∫•t c√†i Chrome (ƒë√£ kh√≥a & t·∫Øt update n·ªôi b·ªô)."
}

# ====== 3) S·ª≠a v·∫•n ƒë·ªÅ password + auto-login (Firefox-related steps removed) ======
fix_passwords() {
  need_sudo
  log "üîß ƒêang s·ª≠a t·∫•t c·∫£ v·∫•n ƒë·ªÅ password..."

  log "üîì X√≥a password user..."
  sudo passwd -d "$USER" || true

  log "‚ö° C·∫•u h√¨nh sudo kh√¥ng c·∫ßn password..."
  echo "$USER ALL=(ALL) NOPASSWD:ALL" | sudo tee "/etc/sudoers.d/$USER" >/dev/null

  log "üöÄ C·∫•u h√¨nh auto-login cho LightDM (Lubuntu)..."
  sudo mkdir -p /etc/lightdm/lightdm.conf.d
  sudo tee /etc/lightdm/lightdm.conf.d/50-autologin.conf >/dev/null <<EOF
[Seat:*]
autologin-user=$USER
autologin-user-timeout=0
autologin-session=Lubuntu
EOF

  log "üöÄ C·∫•u h√¨nh auto-login cho GDM3 (Ubuntu)..."
  sudo tee /etc/gdm3/custom.conf >/dev/null <<EOF
[daemon]
AutomaticLoginEnable=true
AutomaticLogin=$USER

[security]

[xdmcp]

[chooser]

[debug]
EOF

  log "üîë G·ª° GNOME Keyring & KDE Wallet (n·∫øu c√≥)..."
  sudo apt remove --purge -y gnome-keyring seahorse 2>/dev/null || true
  sudo apt remove --purge -y kwalletmanager kwallet-kf5 2>/dev/null || true

  log "üóëÔ∏è X√≥a d·ªØ li·ªáu keyring..."
  rm -rf ~/.local/share/keyrings ~/.gnupg ~/.config/kwalletrc 2>/dev/null || true

  log "üîí V√¥ hi·ªáu PAM keyring..."
  sudo sed -i 's/.*pam_gnome_keyring.so.*/#&/' /etc/pam.d/login 2>/dev/null || true
  sudo sed -i 's/.*pam_gnome_keyring.so.*/#&/' /etc/pam.d/passwd 2>/dev/null || true
  sudo sed -i 's/.*pam_gnome_keyring.so.*/#&/' /etc/pam.d/gdm-password 2>/dev/null || true
  sudo sed -i 's/.*pam_gnome_keyring.so.*/#&/' /etc/pam.d/gdm-autologin 2>/dev/null || true

  log "üõ°Ô∏è T·∫Øt PolicyKit password prompts..."
  sudo mkdir -p /etc/polkit-1/localauthority/50-local.d
  sudo tee /etc/polkit-1/localauthority/50-local.d/disable-passwords.pkla >/dev/null <<EOF
[Disable password prompts for $USER]
Identity=unix-user:$USER
Action=*
ResultActive=yes
ResultInactive=yes
ResultAny=yes
EOF

  log "üåê C·∫•u h√¨nh Chrome kh√¥ng h·ªèi password..."
  mkdir -p ~/.config/google-chrome/Default
  cat > ~/.config/google-chrome/Default/Preferences <<'EOF'
{
   "profile": {
      "password_manager_enabled": false,
      "default_content_setting_values": {
         "password_manager": 2
      }
   }
}
EOF

  log "‚öôÔ∏è T·∫Øt gnome-keyring-daemon (user)..."
  systemctl --user disable gnome-keyring-daemon 2>/dev/null || true
  systemctl --user stop gnome-keyring-daemon 2>/dev/null || true

  log "üîß T·∫°o .desktop cho Chrome d√πng --password-store=basic..."
  sudo rm -f /usr/share/applications/google-chrome.desktop 2>/dev/null || true
  cat > ~/.local/share/applications/google-chrome.desktop <<'EOF'
[Desktop Entry]
Version=1.0
Name=Google Chrome
Comment=Access the Internet
Exec=/usr/bin/google-chrome-stable --password-store=basic %U
StartupNotify=true
Terminal=false
Icon=google-chrome
Type=Application
Categories=Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;
EOF
  chmod +x ~/.local/share/applications/google-chrome.desktop

  log "‚úÖ ƒê√É S·ª¨A XONG. (Kh√¥ng h·ªèi th√™m g√¨ kh√°c.)"
}

# ====== 4) C√†i Nekobox (t·ª´ SetupVm.bash) ======
install_nekobox() {
  ensure_gdown
  log "üìÇ Chu·∫©n b·ªã th∆∞ m·ª•c Nekobox..."
  rm -rf "$HOME/Downloads/nekoray"
  mkdir -p "$HOME/Downloads/nekoray"

  log "‚¨áÔ∏è T·∫£i Nekobox t·ª´ Google Drive..."
  cd "$HOME/Downloads"
  local FILE_ID="${NEKOBOX_FILE_ID:-1ZnubkMQL06AWZoqaHzRHtJTEtBXZ8Pdj}"   # Cho ph√©p override qua bi·∫øn m√¥i tr∆∞·ªùng
  gdown --id "$FILE_ID" -O nekobox.zip || { echo "‚ùå T·∫£i th·∫•t b·∫°i! Ki·ªÉm tra FILE_ID."; return 1; }

  log "üìÇ Gi·∫£i n√©n..."
  unzip -o nekobox.zip -d "$HOME/Downloads/nekoray"

  # S·ª≠a c·∫•u tr√∫c th∆∞ m·ª•c l·ªìng nhau n·∫øu c√≥
  local inner_dir
  inner_dir=$(find "$HOME/Downloads/nekoray" -mindepth 1 -maxdepth 1 -type d | head -n 1 || true)
  if [[ -n "${inner_dir:-}" && "$inner_dir" != "$HOME/Downloads/nekoray" ]]; then
    log "üìÇ ƒêi·ªÅu ch·ªânh c·∫•u tr√∫c th∆∞ m·ª•c..."
    mv "$inner_dir"/* "$HOME/Downloads/nekoray/" || true
    rm -rf "$inner_dir"
  fi

  log "üîë C·∫•p quy·ªÅn th·ª±c thi..."
  cd "$HOME/Downloads/nekoray"
  chmod +x launcher nekobox nekobox_core 2>/dev/null || echo "‚ö†Ô∏è M·ªôt s·ªë file kh√¥ng t·ªìn t·∫°i, b·ªè qua."

  log "üñ•Ô∏è T·∫°o shortcut Desktop & autostart..."
  cat <<EOF > "$HOME/Desktop/nekoray.desktop"
[Desktop Entry]
Version=1.0
Name=Nekobox
Comment=Open Nekobox
Exec=$HOME/Downloads/nekoray/nekobox
Icon=$HOME/Downloads/nekoray/nekobox.png
Terminal=false
Type=Application
Categories=Utility;
EOF
  chmod +x "$HOME/Desktop/nekoray.desktop"

  mkdir -p "$HOME/.config/autostart"
  cp "$HOME/Desktop/nekoray.desktop" "$HOME/.config/autostart/nekoray.desktop"
  chmod +x "$HOME/.config/autostart/nekoray.desktop"

  # Pin v√†o taskbar n·∫øu GNOME
  if [[ "${XDG_CURRENT_DESKTOP:-}" =~ GNOME ]]; then
    log "üìå GNOME: pin Nekobox v√†o favorites..."
    gsettings set org.gnome.shell favorite-apps "$(gsettings get org.gnome.shell favorite-apps | sed "s/]$/, 'nekoray.desktop']/")" || true
  elif [[ "${XDG_CURRENT_DESKTOP:-}" =~ LXQt ]]; then
    log "üìå LXQt kh√¥ng h·ªó tr·ª£ auto pin ‚Äî b·∫°n c√≥ th·ªÉ k√©o shortcut v√†o panel."
  else
    log "‚ÑπÔ∏è M√¥i tr∆∞·ªùng desktop kh√¥ng x√°c ƒë·ªãnh: ${XDG_CURRENT_DESKTOP:-unknown}."
  fi

  log "üöÄ Th·ª≠ ch·∫°y Nekobox..."
  ./nekobox || echo "‚ö†Ô∏è Kh√¥ng t·ª± ch·∫°y ƒë∆∞·ª£c ‚Äî m·ªü b·∫±ng $HOME/Downloads/nekoray/nekobox."

  # Post-checks
  log ""
  log "üîç Ki·ªÉm tra sau c√†i:"
  for pkg in open-vm-tools open-vm-tools-desktop python3-pip unzip build-essential qtbase5-dev; do
    if dpkg -l | grep -q "^ii\s*$pkg"; then echo "‚úÖ $pkg installed"; else echo "‚ùå $pkg missing"; fi
  done
  echo "üêç $(python3 --version)"; echo "$(pip3 --version || true)"
  if python3 -m pip show gdown >/dev/null 2>&1; then echo "‚úÖ gdown installed"; else echo "‚ùå gdown missing"; fi
  [[ -d "$HOME/Downloads/nekoray" ]] && echo "‚úÖ Th∆∞ m·ª•c Nekoray OK" || echo "‚ùå Thi·∫øu th∆∞ m·ª•c Nekoray"
  [[ -f "$HOME/Desktop/nekoray.desktop" ]] && echo "‚úÖ Shortcut Desktop OK" || echo "‚ùå Thi·∫øu shortcut Desktop"

  log "‚úÖ Ho√†n t·∫•t c√†i Nekobox."
}

# ====== AUTO RUN ======
main() {
  log "===== AIO Setup 24.04 (Auto-run) ====="
  base_setup
  install_chrome_from_drive   # üí¨ Ch·ªâ nh·∫Øc ch·ªçn file Chrome .deb ·ªü ƒë√¢y
  fix_passwords
  install_nekobox
  log "üéâ T·∫•t c·∫£ b∆∞·ªõc ƒë√£ ch·∫°y xong. Khuy·∫øn ngh·ªã t·ª± reboot m√°y ƒë·ªÉ √°p d·ª•ng ho√†n to√†n."
}
main
