#!/bin/bash

set -e  # D·ª´ng script n·∫øu c√≥ l·ªói
# === Ki·ªÉm tra v√† c√†i python3-venv n·∫øu thi·∫øu ===
if ! dpkg -l | grep -q "python3.12-venv"; then
    echo "üì¶ ƒêang c√†i python3.12-venv..."
    sudo apt update
    sudo apt install -y python3.12-venv
fi

# === T·ª± c√†i Python venv v√† gdown ===
if [[ ! -d "$HOME/gdown-venv" ]]; then
    echo "üì¶ ƒêang t·∫°o venv Python v√† c√†i gdown..."
    python3 -m venv ~/gdown-venv
fi
source ~/gdown-venv/bin/activate

# Ki·ªÉm tra pip trong venv
if ! python3 -m ensurepip --version &>/dev/null; then
    echo "‚ö†Ô∏è ƒêang c√†i ensurepip cho venv..."
    sudo apt install -y python3-pip
fi

pip install --no-cache-dir gdown


# === Ch·ªçn ch·ª©c nƒÉng ch√≠nh ===
echo "Ch·ªçn ch·ª©c nƒÉng mu·ªën th·ª±c hi·ªán:"
select option in "C√†i Chrome/Firefox" "C√†i Nekobox" "Tho√°t"; do
    case $option in
        "C√†i Chrome/Firefox") 
            BROWSER_SETUP=1; break;;
        "C√†i Nekobox")
            NEKOBOX_SETUP=1; break;;
        "Tho√°t")
            echo "üö™ Tho√°t script."; exit 0;;
        *) echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!";;
    esac
done

# =========================
# PH·∫¶N 1: C√ÄI CHROME / FIREFOX
# =========================
if [[ $BROWSER_SETUP == 1 ]]; then
    CHROME_DRIVE_ID="1tD0XPj-t5C7p9ByV3RLg-qcHaYYSXAj1"
    FIREFOX_DRIVE_ID="1CeMNJTLgfsaFkcroOh1xpxFC-uz9HrLb"
    DOWNLOAD_DIR="$HOME/browser_temp"
    mkdir -p "$DOWNLOAD_DIR" && cd "$DOWNLOAD_DIR"

    echo "Ch·ªçn tr√¨nh duy·ªát mu·ªën c√†i:"
    select browser in "Chrome" "Firefox" "Tho√°t"; do
        case $browser in
            Chrome) DRIVE_ID="$CHROME_DRIVE_ID"; BTYPE="chrome"; break;;
            Firefox) DRIVE_ID="$FIREFOX_DRIVE_ID"; BTYPE="firefox"; break;;
            Tho√°t) exit 0;;
            *) echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!";;
        esac
    done

    echo "üì• ƒêang t·∫£i to√†n b·ªô folder $BTYPE t·ª´ Google Drive..."
    gdown --folder "https://drive.google.com/drive/folders/$DRIVE_ID" --no-cookies

    echo "üîç Danh s√°ch file t·∫£i v·ªÅ:"
    if [[ $BTYPE == "chrome" ]]; then
        FILE_LIST=$(find "$DOWNLOAD_DIR" -type f -name "*.deb")
    else
        FILE_LIST=$(find "$DOWNLOAD_DIR" -type f)
    fi

    if [[ -z "$FILE_LIST" ]]; then
        echo "‚ùå Kh√¥ng t√¨m th·∫•y file h·ª£p l·ªá!"
        exit 1
    fi

    echo "$FILE_LIST" | nl -s". "
    read -p "üëâ Nh·∫≠p s·ªë th·ª© t·ª± file mu·ªën c√†i: " choice
    FILE_SELECT=$(echo "$FILE_LIST" | sed -n "${choice}p")

    echo "üßπ D·ªçn d·∫πp file kh√¥ng d√πng..."
    find "$DOWNLOAD_DIR" -type f ! -name "$(basename "$FILE_SELECT")" -delete

    echo "üóëÔ∏è G·ª° b·∫£n m·∫∑c ƒë·ªãnh..."
    if [[ $BTYPE == "chrome" ]]; then
        sudo apt remove -y google-chrome-stable || true
    else
        sudo snap remove firefox || sudo apt remove -y firefox || true
    fi

    if [[ $BTYPE == "chrome" ]]; then
        echo "üöÄ ƒêang c√†i Chrome..."
        sudo dpkg -i "$FILE_SELECT"
        sudo apt -f install -y
        sudo apt-mark hold google-chrome-stable
        sudo sed -i 's/^deb/# deb/' /etc/apt/sources.list.d/google-chrome.list 2>/dev/null

        echo "üö´ T·∫Øt update n·ªôi b·ªô Chrome..."
        sudo rm -rf /opt/google/chrome/cron/
        sudo mkdir -p /etc/opt/chrome/policies/managed
        cat <<EOF | sudo tee /etc/opt/chrome/policies/managed/disable_update.json >/dev/null
{
  "AutoUpdateCheckPeriodMinutes": 0,
  "DisableAutoUpdateChecksCheckbox": true,
  "MetricsReportingEnabled": false
}
EOF
        sudo chmod -R 000 /opt/google/chrome/cron || true

    else
        echo "üöÄ ƒêang c√†i Firefox..."
        tar -xf "$FILE_SELECT"
        sudo rm -rf /opt/firefox_custom
        sudo mv firefox /opt/firefox_custom
        sudo ln -sf /opt/firefox_custom/firefox /usr/local/bin/firefoxcustom

        echo "üö´ T·∫Øt update n·ªôi b·ªô Firefox..."
        sudo mkdir -p /opt/firefox_custom/distribution
        cat <<EOF | sudo tee /opt/firefox_custom/distribution/policies.json >/dev/null
{
  "policies": {
    "AppAutoUpdate": false,
    "DisableAppUpdate": true,
    "ManualAppUpdateOnly": true
  }
}
EOF
        sudo mkdir -p /opt/firefox_custom/browser/defaults/preferences
        echo 'pref("app.update.enabled", false);' | sudo tee /opt/firefox_custom/browser/defaults/preferences/disable_update.js >/dev/null
    fi

    # === T·∫°o shortcut ===
    echo "üé® T·∫°o shortcut..."
    if [[ $BTYPE == "chrome" ]]; then
        cat <<EOF > ~/.local/share/applications/browser_custom.desktop
[Desktop Entry]
Name=Google Chrome (Custom)
Exec=/usr/bin/google-chrome-stable %U
Icon=google-chrome
Type=Application
Categories=Network;WebBrowser;
StartupNotify=true
EOF
    else
        cat <<EOF > ~/.local/share/applications/browser_custom.desktop
[Desktop Entry]
Name=Firefox (Custom)
Exec=/usr/local/bin/firefoxcustom %U
Icon=/opt/firefox_custom/browser/chrome/icons/default/default128.png
Type=Application
Categories=Network;WebBrowser;
StartupNotify=true
EOF
    fi

    # === Pin v√†o taskbar theo Desktop Environment ===
    if echo "$XDG_CURRENT_DESKTOP" | grep -qi "GNOME"; then
        echo "üìå Ubuntu GNOME detected - auto pinning..."
        gio set ~/.local/share/applications/browser_custom.desktop metadata::trusted true 2>/dev/null
        gsettings set org.gnome.shell favorite-apps "$(gsettings get org.gnome.shell favorite-apps | sed "s/]$/, 'browser_custom.desktop']/")"
    elif echo "$XDG_CURRENT_DESKTOP" | grep -qi "LXQt"; then
        echo "üìå Lubuntu LXQt detected - h√£y nh·∫•p ph·∫£i v√† 'Pin to Panel' th·ªß c√¥ng."
    fi
fi

# =========================
# PH·∫¶N 2: C√ÄI NEKOBOX
# =========================
if [[ $NEKOBOX_SETUP == 1 ]]; then
    echo "üîÑ Updating system packages..."
    sudo add-apt-repository universe -y || true
    sudo apt update && sudo apt upgrade -y

    echo "üì¶ Installing required packages..."
    sudo apt install -y open-vm-tools open-vm-tools-desktop python3-pip unzip build-essential qtbase5-dev python3-venv
    python3 -m venv ~/venv && source ~/venv/bin/activate && pip install --upgrade pip gdown

    echo "üìÇ Preparing Nekoray folder..."
    rm -rf ~/Downloads/nekoray
    mkdir -p ~/Downloads/nekoray
    cd ~/Downloads

    FILE_ID="1ZnubkMQL06AWZoqaHzRHtJTEtBXZ8Pdj"
    gdown --id "$FILE_ID" -O nekobox.zip || { echo "‚ùå Download failed!"; exit 1; }
    unzip -o nekobox.zip -d ~/Downloads/nekoray

    inner_dir=$(find ~/Downloads/nekoray -mindepth 1 -maxdepth 1 -type d | head -n 1)
    if [ "$inner_dir" != "" ] && [ "$inner_dir" != "$HOME/Downloads/nekoray" ]; then
        mv "$inner_dir"/* ~/Downloads/nekoray/
        rm -rf "$inner_dir"
    fi

    cd ~/Downloads/nekoray && chmod +x launcher nekobox nekobox_core || true

    echo "üñ•Ô∏è Creating desktop shortcut..."
    cat <<EOF > ~/Desktop/nekoray.desktop
[Desktop Entry]
Version=1.0
Name=Nekobox
Comment=Open Nekobox
Exec=$HOME/Downloads/nekoray/nekobox
Icon=$HOME/Downloads/nekoray/nekobox.png
Terminal=false
Type=Application
Categories=Utility;
EOF
    chmod +x ~/Desktop/nekoray.desktop

    mkdir -p ~/.config/autostart
    cp ~/Desktop/nekoray.desktop ~/.config/autostart/nekoray.desktop

    if echo "$XDG_CURRENT_DESKTOP" | grep -qi "GNOME"; then
        echo "üìå Ubuntu GNOME detected - auto pinning Nekobox..."
        gsettings set org.gnome.shell favorite-apps "$(gsettings get org.gnome.shell favorite-apps | sed "s/]$/, 'nekoray.desktop']/")"
    elif echo "$XDG_CURRENT_DESKTOP" | grep -qi "LXQt"; then
        echo "üìå Lubuntu LXQt detected - h√£y k√©o shortcut v√†o panel th·ªß c√¥ng."
    fi
fi

echo "üéâ Ho√†n t·∫•t c√†i ƒë·∫∑t!"


