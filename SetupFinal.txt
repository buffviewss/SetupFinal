#!/bin/bash
set -e

# === PH·∫¶N 1: C√ÄI CHROME / FIREFOX ===

if [[ ! -d "$HOME/gdown-venv" ]]; then
    echo "üì¶ ƒêang t·∫°o venv Python v√† c√†i gdown..."
    python3 -m venv ~/gdown-venv
fi

source ~/gdown-venv/bin/activate
pip install --upgrade --no-cache-dir gdown

CHROME_DRIVE_ID="1tD0XPj-t5C7p9ByV3RLg-qcHaYYSXAj1"
FIREFOX_DRIVE_ID="1CeMNJTLgfsaFkcroOh1xpxFC-uz9HrLb"
DOWNLOAD_DIR="$HOME/browser_temp"
mkdir -p "$DOWNLOAD_DIR" && cd "$DOWNLOAD_DIR"

echo "Ch·ªçn tr√¨nh duy·ªát mu·ªën c√†i:"
select browser in "Chrome" "Firefox" "Tho√°t"; do
    case $browser in
        Chrome) DRIVE_ID="$CHROME_DRIVE_ID"; BTYPE="chrome"; break;;
        Firefox) DRIVE_ID="$FIREFOX_DRIVE_ID"; BTYPE="firefox"; break;;
        Tho√°t) echo "üö™ Tho√°t script."; exit 0;;
        *) echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!";;
    esac
done

echo "üì• ƒêang t·∫£i folder $BTYPE t·ª´ Google Drive..."
gdown --folder "https://drive.google.com/drive/folders/$DRIVE_ID" --no-cookies

echo "üîç Danh s√°ch file t·∫£i v·ªÅ:"
if [[ $BTYPE == "chrome" ]]; then
    FILE_LIST=$(find "$DOWNLOAD_DIR" -type f -name "*.deb")
else
    FILE_LIST=$(find "$DOWNLOAD_DIR" -mindepth 1 -maxdepth 1)
fi

if [[ -z "$FILE_LIST" ]]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y file h·ª£p l·ªá!"
    exit 1
fi

# ‚úÖ Hi·ªÉn th·ªã danh s√°ch ch·ªçn theo s·ªë th·ª© t·ª±
mapfile -t files_array <<< "$FILE_LIST"

for i in "${!files_array[@]}"; do
    echo "$((i+1)). ${files_array[$i]}"
done

read -p "üëâ Nh·∫≠p s·ªë th·ª© t·ª± file mu·ªën c√†i: " choice
choice=$((choice - 1))

if [[ $choice -lt 0 || $choice -ge ${#files_array[@]} ]]; then
    echo "‚ùå S·ªë kh√¥ng h·ª£p l·ªá!"
    exit 1
fi

FILE_SELECT="${files_array[$choice]}"
echo "‚úÖ Ch·ªçn file: $FILE_SELECT"

find "$DOWNLOAD_DIR" -mindepth 1 -maxdepth 1 ! -path "$FILE_SELECT" -exec rm -rf {} +

echo "üóëÔ∏è G·ª° b·∫£n c≈©..."
if [[ $BTYPE == "chrome" ]]; then
    sudo apt remove -y google-chrome-stable || true
else
    sudo snap remove firefox || sudo apt remove -y firefox || true
fi

if [[ $BTYPE == "chrome" ]]; then
    echo "üöÄ C√†i Chrome..."
    sudo dpkg -i "$FILE_SELECT" || true
    sudo apt -f install -y
    sudo apt-mark hold google-chrome-stable
    sudo sed -i 's/^deb/# deb/' /etc/apt/sources.list.d/google-chrome.list 2>/dev/null

    echo "üîí V√¥ hi·ªáu h√≥a c·∫≠p nh·∫≠t Chrome..."
    sudo rm -rf /opt/google/chrome/cron/
    sudo mkdir -p /etc/opt/chrome/policies/managed
    cat <<EOF | sudo tee /etc/opt/chrome/policies/managed/disable_update.json >/dev/null
{
  "AutoUpdateCheckPeriodMinutes": 0,
  "DisableAutoUpdateChecksCheckbox": true,
  "MetricsReportingEnabled": false
}
EOF
    sudo chmod -R 000 /opt/google/chrome/cron || true

else
    echo "üöÄ C√†i Firefox..."
    if [[ -f "$FILE_SELECT" && "$FILE_SELECT" == *.tar.* ]]; then
        tar -xf "$FILE_SELECT"
    elif [[ -d "$FILE_SELECT" && "$(basename "$FILE_SELECT")" == firefox* ]]; then
        cp -r "$FILE_SELECT" ./firefox
    else
        echo "‚ùå File kh√¥ng h·ª£p l·ªá!"; exit 1
    fi
    sudo rm -rf /opt/firefox_custom
    sudo mv firefox /opt/firefox_custom
    sudo ln -sf /opt/firefox_custom/firefox /usr/local/bin/firefoxcustom

    echo "üîí V√¥ hi·ªáu h√≥a c·∫≠p nh·∫≠t Firefox..."
    sudo mkdir -p /opt/firefox_custom/distribution
    cat <<EOF2 | sudo tee /opt/firefox_custom/distribution/policies.json >/dev/null
{
  "policies": {
    "AppAutoUpdate": false,
    "DisableAppUpdate": true,
    "ManualAppUpdateOnly": true
  }
}
EOF2
    sudo mkdir -p /opt/firefox_custom/browser/defaults/preferences
    echo 'pref("app.update.enabled", false);' | sudo tee /opt/firefox_custom/browser/defaults/preferences/disable_update.js >/dev/null
fi

echo "üé® T·∫°o shortcut..."
mkdir -p ~/.local/share/applications
if [[ $BTYPE == "chrome" ]]; then
    cat <<EOF3 > ~/.local/share/applications/browser_custom.desktop
[Desktop Entry]
Name=Google Chrome (Custom)
Exec=/usr/bin/google-chrome-stable %U
Icon=google-chrome
Type=Application
Categories=Network;WebBrowser;
StartupNotify=true
EOF3
else
    cat <<EOF3 > ~/.local/share/applications/browser_custom.desktop
[Desktop Entry]
Name=Firefox (Custom)
Exec=/usr/local/bin/firefoxcustom %U
Icon=/opt/firefox_custom/browser/chrome/icons/default/default128.png
Type=Application
Categories=Network;WebBrowser;
StartupNotify=true
EOF3
fi

# === Auto-pin shortcut ===
DESKTOP_ENV=$(echo "$XDG_CURRENT_DESKTOP" | tr '[:upper:]' '[:lower:]')

if [[ "$DESKTOP_ENV" == *"gnome"* && $(command -v gsettings) ]]; then
    echo "üìå GNOME: auto pin shortcut..."
    gio set ~/.local/share/applications/browser_custom.desktop metadata::trusted true 2>/dev/null
    favorites=$(gsettings get org.gnome.shell favorite-apps)
    if [[ "$favorites" != *"browser_custom.desktop"* ]]; then
        new_fav="${favorites%]*}, 'browser_custom.desktop']"
        gsettings set org.gnome.shell favorite-apps "$new_fav"
    fi

elif [[ "$DESKTOP_ENV" == *"lxqt"* ]]; then
    echo "üìå Lubuntu LXQt: auto s·ª≠a panel.conf..."
    CONFIG="$HOME/.config/lxqt/panel.conf"
    SHORTCUT="browser_custom.desktop"
    if [[ -f "$CONFIG" && ! $(grep "$SHORTCUT" "$CONFIG") ]]; then
        sed -i "/^\[quicklaunch\]/,/^\[/ s|^apps=.*|&,'$SHORTCUT'|" "$CONFIG"
        echo "‚úÖ ƒê√£ th√™m v√†o quicklaunch. Ch·∫°y: lxqt-panel --restart"
    fi
else
    echo "‚ö†Ô∏è Kh√¥ng r√µ desktop environment. H√£y pin th·ªß c√¥ng n·∫øu c·∫ßn."
fi

# === PH·∫¶N 2: C√ÄI NEKOBOX ===
echo "üì¶ B·∫Øt ƒë·∫ßu c√†i Nekobox..."

sudo add-apt-repository universe -y || true
sudo apt update && sudo apt upgrade -y
sudo apt install -y open-vm-tools open-vm-tools-desktop python3-pip unzip build-essential qtbase5-dev python3-venv

source ~/gdown-venv/bin/activate
pip install --upgrade gdown

echo "üìÇ Chu·∫©n b·ªã th∆∞ m·ª•c Nekobox..."
rm -rf ~/Downloads/nekoray
mkdir -p ~/Downloads/nekoray
cd ~/Downloads

gdown --id "1ZnubkMQL06AWZoqaHzRHtJTEtBXZ8Pdj" -O nekobox.zip || { echo "‚ùå T·∫£i th·∫•t b·∫°i."; exit 1; }
unzip -o nekobox.zip -d ~/Downloads/nekoray

inner_dir=$(find ~/Downloads/nekoray -mindepth 1 -maxdepth 1 -type d | head -n 1)
if [ "$inner_dir" != "" ] && [ "$inner_dir" != "$HOME/Downloads/nekoray" ]; then
    mv "$inner_dir"/* ~/Downloads/nekoray/
    rm -rf "$inner_dir"
fi
cd ~/Downloads/nekoray && chmod +x launcher nekobox nekobox_core || true

echo "üñ•Ô∏è T·∫°o shortcut Nekobox..."
cat <<EOF > ~/Desktop/nekoray.desktop
[Desktop Entry]
Version=1.0
Name=Nekobox
Comment=Open Nekobox
Exec=$HOME/Downloads/nekoray/nekobox
Icon=$HOME/Downloads/nekoray/nekobox.png
Terminal=false
Type=Application
Categories=Utility;
EOF
chmod +x ~/Desktop/nekoray.desktop

mkdir -p ~/.config/autostart
cp ~/Desktop/nekoray.desktop ~/.config/autostart/nekoray.desktop

# === Auto pin NEKOBOX v√†o GNOME ho·∫∑c LXQT ===
if [[ "$DESKTOP_ENV" == *"gnome"* ]]; then
    echo "üìå GNOME: auto pin Nekobox..."
    gio set ~/Desktop/nekoray.desktop metadata::trusted true 2>/dev/null
    favorites=$(gsettings get org.gnome.shell favorite-apps)
    if [[ "$favorites" != *"nekoray.desktop"* ]]; then
        new_fav="${favorites%]*}, 'nekoray.desktop']"
        gsettings set org.gnome.shell favorite-apps "$new_fav"
    fi

elif [[ "$DESKTOP_ENV" == *"lxqt"* ]]; then
    echo "üìå LXQt: th√™m Nekobox v√†o quicklaunch..."
    CONFIG="$HOME/.config/lxqt/panel.conf"
    if [[ -f "$CONFIG" && ! $(grep "nekoray.desktop" "$CONFIG") ]]; then
        sed -i "/^\[quicklaunch\]/,/^\[/ s|^apps=.*|&,'nekoray.desktop'|" "$CONFIG"
        echo "‚úÖ Nekobox ƒë√£ ƒë∆∞·ª£c ghim. Ch·∫°y: lxqt-panel --restart"
    fi
fi

echo "üéâ Ho√†n t·∫•t c√†i ƒë·∫∑t Chrome/Firefox + Nekobox!"
